<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--
  sql映射文件（sql mapper）： 写sql语句的， mybatis会执行这些sql
  1.指定约束文件
     <!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    mybatis-3-mapper.dtd是约束文件的名称， 扩展名是dtd的。
  2.约束文件作用：  限制，检查在当前文件中出现的标签，属性必须符合mybatis的要求。
-->


<!--
  3.mapper 是当前文件的根标签，必须的。
    namespace：叫做命名空间，唯一值的， 可以是自定义的字符串。
               要求你使用dao接口的全限定名称。
-->
<mapper namespace="mybatis.dao.UserDao">
    <!--
    动态sql
            where 满足加上,不满足不加
            if  为了防止i语法错误,加入 1=1 不会影响后续结果
            foreach 循环java中的数组等 sql  中 in
    -->

    <select id="getAllUserByObjectIf" resultType="User">
        select id, name, pwd
        FROM Mybatis.m_user where id>0
        <if test="name !=null and name !='' ">
            and name=#{name}
        </if>
        <if test="id > 2">
            and id=#{id}
        </if>
    </select>

    <select id="getAllUserByObjectWh" resultType="User">
        select id, name, pwd
        FROM Mybatis.m_user
        <where>
            <if test="name !=null and name !='' ">
                and name=#{name}
            </if>
            <if test="id > 2">
                or id=#{id}
            </if>
        </where>

    </select>

    <!--    代码片段
    提取可重复用的代码片段
-->

    <sql id="getAll">
        SELECT *
        FROM Mybatis.m_user
    </sql>
    <sql id="getTwo">
        SELECT id, pwd
        FROM Mybatis.m_user
    </sql>
    <!--
    foreach
        collection 接口中方法参数的类型 array  list
        item 集合中的元素
        open 循环开始时的字符
        close 循环结束时的字符
        separator 元素之间的分割符号
    -->
    <select id="getAllUserByObjectEach" resultType="User">
        <include refid="getAll"/>
        where id in
        <foreach collection="list" item="v" open="(" close=")" separator=",">
            #{v}
        </foreach>


    </select>

    <!--
    foreach  列表内对象 的 属性
    -->
    <select id="getAllUserByObjectEachObject" resultType="User">
        <include refid="getTwo"/>
        where id in
        <foreach collection="list" item="user" open="(" close=")" separator=",">
            #{user.id}
        </foreach>


    </select>


</mapper>